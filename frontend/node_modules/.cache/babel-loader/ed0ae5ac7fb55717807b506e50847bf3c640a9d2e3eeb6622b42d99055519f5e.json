{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../env\";\nexport const productState = {\n  loading: false,\n  error: \"\",\n  products: []\n};\n\n//how to create an action\n// createAction//\n\n//async api calling this is also a  action\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async () => {\n  const response = await fetch(`${BASE_URL}/product`);\n  const data = await response.json();\n  //reduxt thunk data pass\n  return data;\n});\n//delete \nconst DeleteAPI = id => {\n  let timer;\n  return new Promise((resolve, reject) => {\n    timer = setTimeout(() => {\n      fetch(`http://localhost:8000/product/delete/${id}`, {\n        method: 'Delete'\n      });\n      resolve({\n        message: `product having id -> ${id} is deleted successfully`\n      });\n      clearTimeout(timer);\n    }, 1000);\n  });\n};\n_c = DeleteAPI;\nexport const deleteProductById = createAsyncThunk(\"product/delete\", async (id, thunkAPI) => {\n  const res = await DeleteAPI(id);\n  console.log(res);\n  thunkAPI.dispatch(deleteProduct(id));\n  return true;\n});\n\n//update\n\n//Product slice\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState: productState,\n  reducers: {\n    // to mutate or change the redux state datas...\n    deleteProduct: (state, action) => {\n      const productId = action.payload;\n      const tempProducts = [...state.products].filter(pd => pd.id !== productId);\n      state.products = tempProducts;\n    },\n    //to search the product\n    searchProduct: (state, action) => {\n      const searchTerm = action.payload;\n      if (!searchTerm) {\n        return;\n      }\n      const searchedProduct = [...state.products].filter(pd => pd.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      state.products = searchedProduct;\n    },\n    add(state, action) {\n      state.products.push(action.payload);\n    },\n    // to sort the products..\n    sortProduct: (state, action) => {\n      const type = action.payload;\n      if (type) {\n        const sortProduct = [...state.products].sort((a, b) => a.title.localeCompare(b.title));\n        state.products = sortProduct;\n      } else {\n        const sortProduct = [...state.products].sort((a, b) => b.title.localeCompare(a.title));\n        state.products = sortProduct;\n      }\n    },\n    sortProductPrice: (state, action) => {\n      const type = action.payload;\n      if (type) {\n        const sortPrice = [...state.products].sort((a, b) => a.price - b.price);\n        state.products = sortPrice;\n      } else {\n        const sortPrice = [...state.products].sort((a, b) => b.price - a.price);\n        state.products = sortPrice;\n      }\n    }\n  },\n  //maintain redux state for asyc apis\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.error = \"\";\n      state.loading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n      state.error = \"\";\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.products = [];\n      state.error = action.payload;\n    });\n  }\n});\n\n//export actions\nexport const {\n  deleteProduct,\n  searchProduct,\n  add,\n  sortProduct,\n  sortProductPrice\n} = productsSlice.actions;\nexport default productsSlice.reducer;\nvar _c;\n$RefreshReg$(_c, \"DeleteAPI\");","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","productState","loading","error","products","fetchProducts","response","fetch","data","json","DeleteAPI","id","timer","Promise","resolve","reject","setTimeout","method","message","clearTimeout","deleteProductById","thunkAPI","res","console","log","dispatch","deleteProduct","productsSlice","name","initialState","reducers","state","action","productId","payload","tempProducts","filter","pd","searchProduct","searchTerm","searchedProduct","title","toLowerCase","includes","add","push","sortProduct","type","sort","a","b","localeCompare","sortProductPrice","sortPrice","price","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/sauuu/OneDrive/ドキュメント/codebro/Store/ecom/frontend/src/store/products/index.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BASE_URL } from \"../../env\";\r\n\r\nexport const productState = {\r\n  loading: false,\r\n  error: \"\",\r\n  products: [],\r\n};\r\n\r\n//how to create an action\r\n// createAction//\r\n\r\n//async api calling this is also a  action\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const response = await fetch(`${BASE_URL}/product`);\r\n    const data = await response.json();\r\n    //reduxt thunk data pass\r\n    return data;\r\n  }\r\n);\r\n//delete \r\nconst DeleteAPI = (id) => {\r\n  let timer;\r\n  return new Promise((resolve, reject) => {\r\n    timer = setTimeout(() => {\r\n      fetch(`http://localhost:8000/product/delete/${id}`, {\r\n       method : 'Delete'\r\n     })\r\n      resolve({\r\n        message: `product having id -> ${id} is deleted successfully`\r\n      });\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport const deleteProductById = createAsyncThunk(\r\n  \"product/delete\",\r\n  async (id, thunkAPI) => {\r\n    const res = await DeleteAPI(id);\r\nconsole.log(res);\r\nthunkAPI.dispatch(deleteProduct(id));\r\nreturn true;\r\n}\r\n);\r\n\r\n//update\r\n \r\n\r\n//Product slice\r\nexport const productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: productState,\r\n  reducers: {\r\n    // to mutate or change the redux state datas...\r\n    deleteProduct: (state, action) => {\r\n      const productId = action.payload;\r\n      const tempProducts = [...state.products].filter(\r\n        (pd) => pd.id !== productId\r\n      );\r\n      state.products = tempProducts;\r\n    },\r\n    //to search the product\r\n    searchProduct: (state, action) => {\r\n      const searchTerm = action.payload;\r\n      if (!searchTerm) {\r\n        return;\r\n      }\r\n      const searchedProduct = [...state.products].filter((pd) =>\r\n        pd.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      state.products = searchedProduct;\r\n    },\r\n\r\n    add(state, action) {\r\n      state.products.push(action.payload);\r\n    },\r\n\r\n    // to sort the products..\r\n    sortProduct: (state, action) => {\r\n      const type = action.payload;\r\n      if (type) {\r\n        const sortProduct = [...state.products].sort((a, b) =>\r\n          a.title.localeCompare(b.title)\r\n        );\r\n        state.products = sortProduct;\r\n      } else {\r\n        const sortProduct = [...state.products].sort((a, b) =>\r\n          b.title.localeCompare(a.title)\r\n        );\r\n        state.products = sortProduct;\r\n      }\r\n    },\r\n\r\n    sortProductPrice: (state, action) => {\r\n      const type = action.payload;\r\n      if (type) {\r\n        const sortPrice = [...state.products].sort((a, b) => a.price - b.price);\r\n        state.products = sortPrice;\r\n      } else {\r\n        const sortPrice = [...state.products].sort((a, b) => b.price - a.price);\r\n        state.products = sortPrice;\r\n      }\r\n    },\r\n    \r\n  },\r\n  //maintain redux state for asyc apis\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.error = \"\";\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.products = action.payload;\r\n        state.error = \"\";\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.products = [];\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\n//export actions\r\nexport const {\r\n  deleteProduct,\r\n  searchProduct,\r\n  add,\r\n  sortProduct,\r\n  sortProductPrice,\r\n} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}